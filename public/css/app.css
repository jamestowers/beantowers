@font-face {
  font-family: 'DoubleQuick';
  src: url(/fonts/double-quick.eot?70ef3f8bcf37b2ea58907787461461cb);
  /* IE9 Compat Modes */
  src: url(/fonts/double-quick.eot?70ef3f8bcf37b2ea58907787461461cb) format("embedded-opentype"), url(/fonts/double-quick.woff?59aff3613d51fcc7cb3eb47bce4c3ace) format("woff"), url(/fonts/double-quick.ttf?0b6196a1afb3e568341446ebe5424cea) format("truetype"), url(/fonts/double-quick.svg?503543cf015b376392a741fcb6285e39) format("svg");
  /* Legacy iOS */
  font-style: normal;
  font-weight: 400;
}

@font-face {
  font-family: 'Gilroy ExtraBold';
  src: url(/fonts/Gilroy-ExtraBold.eot?f5a5e83d426edc3ac4b45e780732c617);
  /* IE9 Compat Modes */
  src: url(/fonts/Gilroy-ExtraBold.eot?f5a5e83d426edc3ac4b45e780732c617) format("embedded-opentype"), url(/fonts/Gilroy-ExtraBold.woff?007390e46922a4b6d64be587c173f2be) format("woff"), url(/fonts/Gilroy-ExtraBold.ttf?4f90f13069df09843c28a2ab56c77766) format("truetype"), url(/fonts/Gilroy-ExtraBold.svg?52cac575bedf1854f13f7fbe7e6ff3fe) format("svg");
  /* Legacy iOS */
  font-style: normal;
  font-weight: 700;
}

@-webkit-keyframes slide-from-top {
  0% {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
  }

  100% {
    -webkit-transform: translateY(0%);
            transform: translateY(0%);
  }
}

@keyframes slide-from-top {
  0% {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
  }

  100% {
    -webkit-transform: translateY(0%);
            transform: translateY(0%);
  }
}

@-webkit-keyframes slide-to-top {
  0% {
    -webkit-transform: translateY(0%);
            transform: translateY(0%);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    opacity: 0;
  }
}

@keyframes slide-to-top {
  0% {
    -webkit-transform: translateY(0%);
            transform: translateY(0%);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    opacity: 0;
  }
}

@-webkit-keyframes slide-from-bottom {
  0% {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0;
  }

  100% {
    -webkit-transform: translateY(0%);
            transform: translateY(0%);
    opacity: 1;
  }
}

@keyframes slide-from-bottom {
  0% {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0;
  }

  100% {
    -webkit-transform: translateY(0%);
            transform: translateY(0%);
    opacity: 1;
  }
}

@-webkit-keyframes slide-to-bottom {
  0% {
    -webkit-transform: translateY(0%);
            transform: translateY(0%);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0;
  }
}

@keyframes slide-to-bottom {
  0% {
    -webkit-transform: translateY(0%);
            transform: translateY(0%);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
    opacity: 0;
  }
}

@-webkit-keyframes slide-from-right {
  0% {
    -webkit-transform: translateX(100%);
            transform: translateX(100%);
  }

  100% {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }
}

@keyframes slide-from-right {
  0% {
    -webkit-transform: translateX(100%);
            transform: translateX(100%);
  }

  100% {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }
}

@-webkit-keyframes slide-to-right {
  0% {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateX(-100%) rotate(-30deg) scale(0.8);
            transform: translateX(-100%) rotate(-30deg) scale(0.8);
    opacity: 0;
  }
}

@keyframes slide-to-right {
  0% {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateX(-100%) rotate(-30deg) scale(0.8);
            transform: translateX(-100%) rotate(-30deg) scale(0.8);
    opacity: 0;
  }
}

@-webkit-keyframes slide-from-left {
  0% {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
  }

  100% {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }
}

@keyframes slide-from-left {
  0% {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
  }

  100% {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }
}

@-webkit-keyframes slide-to-left {
  0% {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateX(100%) rotate(30deg) scale(0.8);
            transform: translateX(100%) rotate(30deg) scale(0.8);
    opacity: 0;
  }
}

@keyframes slide-to-left {
  0% {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
    opacity: 1;
  }

  100% {
    -webkit-transform: translateX(100%) rotate(30deg) scale(0.8);
            transform: translateX(100%) rotate(30deg) scale(0.8);
    opacity: 0;
  }
}

@-webkit-keyframes rotate {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes rotate {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@-webkit-keyframes spin-in {
  0% {
    -webkit-transform: rotateY(0deg);
            transform: rotateY(0deg);
  }

  100% {
    -webkit-transform: rotateY(360deg);
            transform: rotateY(360deg);
  }
}

@keyframes spin-in {
  0% {
    -webkit-transform: rotateY(0deg);
            transform: rotateY(0deg);
  }

  100% {
    -webkit-transform: rotateY(360deg);
            transform: rotateY(360deg);
  }
}

@-webkit-keyframes rotateRightSideFirst {
  50% {
    -webkit-transform: translateZ(-50px) rotateY(5deg);
            transform: translateZ(-50px) rotateY(5deg);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }

  100% {
    -webkit-transform: translateZ(-200px);
            transform: translateZ(-200px);
  }
}

@keyframes rotateRightSideFirst {
  50% {
    -webkit-transform: translateZ(-50px) rotateY(5deg);
            transform: translateZ(-50px) rotateY(5deg);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }

  100% {
    -webkit-transform: translateZ(-200px);
            transform: translateZ(-200px);
  }
}

@-webkit-keyframes shake {
  0% {
    -webkit-transform: translate(2px, 1px) rotate(0deg);
            transform: translate(2px, 1px) rotate(0deg);
  }

  10% {
    -webkit-transform: translate(-1px, -2px) rotate(-1deg);
            transform: translate(-1px, -2px) rotate(-1deg);
  }

  20% {
    -webkit-transform: translate(-3px, 0px) rotate(1deg);
            transform: translate(-3px, 0px) rotate(1deg);
  }

  30% {
    -webkit-transform: translate(0px, 2px) rotate(0deg);
            transform: translate(0px, 2px) rotate(0deg);
  }

  40% {
    -webkit-transform: translate(1px, -1px) rotate(1deg);
            transform: translate(1px, -1px) rotate(1deg);
  }

  50% {
    -webkit-transform: translate(-1px, 2px) rotate(-1deg);
            transform: translate(-1px, 2px) rotate(-1deg);
  }

  60% {
    -webkit-transform: translate(-3px, 1px) rotate(0deg);
            transform: translate(-3px, 1px) rotate(0deg);
  }

  70% {
    -webkit-transform: translate(2px, 1px) rotate(-1deg);
            transform: translate(2px, 1px) rotate(-1deg);
  }

  80% {
    -webkit-transform: translate(-1px, -1px) rotate(1deg);
            transform: translate(-1px, -1px) rotate(1deg);
  }

  90% {
    -webkit-transform: translate(2px, 2px) rotate(0deg);
            transform: translate(2px, 2px) rotate(0deg);
  }

  100% {
    -webkit-transform: translate(1px, -2px) rotate(-1deg);
            transform: translate(1px, -2px) rotate(-1deg);
  }
}

@keyframes shake {
  0% {
    -webkit-transform: translate(2px, 1px) rotate(0deg);
            transform: translate(2px, 1px) rotate(0deg);
  }

  10% {
    -webkit-transform: translate(-1px, -2px) rotate(-1deg);
            transform: translate(-1px, -2px) rotate(-1deg);
  }

  20% {
    -webkit-transform: translate(-3px, 0px) rotate(1deg);
            transform: translate(-3px, 0px) rotate(1deg);
  }

  30% {
    -webkit-transform: translate(0px, 2px) rotate(0deg);
            transform: translate(0px, 2px) rotate(0deg);
  }

  40% {
    -webkit-transform: translate(1px, -1px) rotate(1deg);
            transform: translate(1px, -1px) rotate(1deg);
  }

  50% {
    -webkit-transform: translate(-1px, 2px) rotate(-1deg);
            transform: translate(-1px, 2px) rotate(-1deg);
  }

  60% {
    -webkit-transform: translate(-3px, 1px) rotate(0deg);
            transform: translate(-3px, 1px) rotate(0deg);
  }

  70% {
    -webkit-transform: translate(2px, 1px) rotate(-1deg);
            transform: translate(2px, 1px) rotate(-1deg);
  }

  80% {
    -webkit-transform: translate(-1px, -1px) rotate(1deg);
            transform: translate(-1px, -1px) rotate(1deg);
  }

  90% {
    -webkit-transform: translate(2px, 2px) rotate(0deg);
            transform: translate(2px, 2px) rotate(0deg);
  }

  100% {
    -webkit-transform: translate(1px, -2px) rotate(-1deg);
            transform: translate(1px, -2px) rotate(-1deg);
  }
}

@-webkit-keyframes swing {
  20% {
    -webkit-transform: rotate3d(0, 0, 1, 15deg);
            transform: rotate3d(0, 0, 1, 15deg);
  }

  40% {
    -webkit-transform: rotate3d(0, 0, 1, -10deg);
            transform: rotate3d(0, 0, 1, -10deg);
  }

  60% {
    -webkit-transform: rotate3d(0, 0, 1, 5deg);
            transform: rotate3d(0, 0, 1, 5deg);
  }

  80% {
    -webkit-transform: rotate3d(0, 0, 1, -5deg);
            transform: rotate3d(0, 0, 1, -5deg);
  }

  to {
    -webkit-transform: rotate3d(0, 0, 1, 0deg);
            transform: rotate3d(0, 0, 1, 0deg);
  }
}

@keyframes swing {
  20% {
    -webkit-transform: rotate3d(0, 0, 1, 15deg);
            transform: rotate3d(0, 0, 1, 15deg);
  }

  40% {
    -webkit-transform: rotate3d(0, 0, 1, -10deg);
            transform: rotate3d(0, 0, 1, -10deg);
  }

  60% {
    -webkit-transform: rotate3d(0, 0, 1, 5deg);
            transform: rotate3d(0, 0, 1, 5deg);
  }

  80% {
    -webkit-transform: rotate3d(0, 0, 1, -5deg);
            transform: rotate3d(0, 0, 1, -5deg);
  }

  to {
    -webkit-transform: rotate3d(0, 0, 1, 0deg);
            transform: rotate3d(0, 0, 1, 0deg);
  }
}

@-webkit-keyframes fadeToTop {
  from {
    -webkit-transform: translateY(0) rotate3d(1, 0, 0, 0deg);
            transform: translateY(0) rotate3d(1, 0, 0, 0deg);
    opacity: 1;
  }

  to {
    -webkit-transform: translateY(-100%) rotate3d(1, 0, 0, 90deg);
            transform: translateY(-100%) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
}

@keyframes fadeToTop {
  from {
    -webkit-transform: translateY(0) rotate3d(1, 0, 0, 0deg);
            transform: translateY(0) rotate3d(1, 0, 0, 0deg);
    opacity: 1;
  }

  to {
    -webkit-transform: translateY(-100%) rotate3d(1, 0, 0, 90deg);
            transform: translateY(-100%) rotate3d(1, 0, 0, 90deg);
    opacity: 0;
  }
}

@-webkit-keyframes fadeFromBottom {
  from {
    -webkit-transform: translateY(100%) rotate3d(1, 0, 0, -90deg);
            transform: translateY(100%) rotate3d(1, 0, 0, -90deg);
    opacity: 0;
  }

  to {
    -webkit-transform: translateY(0) rotate3d(1, 0, 0, 0deg);
            transform: translateY(0) rotate3d(1, 0, 0, 0deg);
    opacity: 1;
  }
}

@keyframes fadeFromBottom {
  from {
    -webkit-transform: translateY(100%) rotate3d(1, 0, 0, -90deg);
            transform: translateY(100%) rotate3d(1, 0, 0, -90deg);
    opacity: 0;
  }

  to {
    -webkit-transform: translateY(0) rotate3d(1, 0, 0, 0deg);
            transform: translateY(0) rotate3d(1, 0, 0, 0deg);
    opacity: 1;
  }
}

@-webkit-keyframes flipInX {
  from {
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, -90deg);
            transform: perspective(1000px) rotate3d(1, 0, 0, -90deg);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, 20deg);
            transform: perspective(1000px) rotate3d(1, 0, 0, 20deg);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }

  60% {
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, -10deg);
            transform: perspective(1000px) rotate3d(1, 0, 0, -10deg);
    opacity: 1;
  }

  80% {
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, 5deg);
            transform: perspective(1000px) rotate3d(1, 0, 0, 5deg);
  }

  to {
    -webkit-transform: perspective(1000px);
            transform: perspective(1000px);
  }
}

@keyframes flipInX {
  from {
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, -90deg);
            transform: perspective(1000px) rotate3d(1, 0, 0, -90deg);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, 20deg);
            transform: perspective(1000px) rotate3d(1, 0, 0, 20deg);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }

  60% {
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, -10deg);
            transform: perspective(1000px) rotate3d(1, 0, 0, -10deg);
    opacity: 1;
  }

  80% {
    -webkit-transform: perspective(1000px) rotate3d(1, 0, 0, 5deg);
            transform: perspective(1000px) rotate3d(1, 0, 0, 5deg);
  }

  to {
    -webkit-transform: perspective(1000px);
            transform: perspective(1000px);
  }
}

@-webkit-keyframes mask {
  0% {
    max-width: 100%;
    right: 0;
  }

  100% {
    max-width: 0%;
  }
}

@keyframes mask {
  0% {
    max-width: 100%;
    right: 0;
  }

  100% {
    max-width: 0%;
  }
}

@-webkit-keyframes wipe {
  0% {
    max-width: 0%;
    border: none;
    text-indent: -9999px;
  }

  49% {
    max-width: 100%;
    border: none;
    text-indent: -9999px;
  }

  50% {
    border: inherit;
    text-indent: auto;
  }
}

@keyframes wipe {
  0% {
    max-width: 0%;
    border: none;
    text-indent: -9999px;
  }

  49% {
    max-width: 100%;
    border: none;
    text-indent: -9999px;
  }

  50% {
    border: inherit;
    text-indent: auto;
  }
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.6s;
}

.fade-enter,
.fade-leave-to {
  opacity: 0;
}

/*! normalize.css v2.1.3 | MIT License | git.io/normalize */

/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined in IE 8/9.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */

audio,
canvas,
video {
  display: inline-block;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background: transparent;
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */

a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */

a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari 5 and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/**
 * Improve readability of pre-formatted text in all browsers.
 */

pre {
  white-space: pre-wrap;
}

/**
 * Set consistent quote types.
 */

q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9.
 */

img {
  border: 0;
}

/**
 * Correct overflow displayed oddly in IE 9.
 */

svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari 5.
 */

figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */

button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */

input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */

textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/******************************************************************
CUSTOMIZED RESET VALUES
I added these extra styles as a more personalized reset. Feel free
to remove them if you like or add your own. If you want to update
the normalize styles, make sure to edit from this point up.
******************************************************************/

p {
  -webkit-hyphens: auto;
  -epub-hyphens: auto;
  -ms-hyphens: auto;
      hyphens: auto;
}

b,
strong,
.strong {
  font-weight: bold;
}

dfn,
em,
.em {
  font-style: italic;
}

small,
.small {
  font-size: 75%;
}

ul,
ol {
  padding: 0;
  list-style-type: none;
}

dd {
  margin: 0;
}

.sidebar ul,
.sidebar ol,
.commentlist {
  list-style: none;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

.group:after {
  content: "";
  display: table;
  clear: both;
}

img {
  display: inline-block;
  max-width: 100%;
  height: auto;
}

ul li {
  padding: 10px;
}

canvas {
  display: block;
}

section {
  clear: both;
}

.inner {
  width: 100%;
  max-width: 940px;
  margin: 0 auto;
  clear: left;
}

.inner.narrow {
  max-width: 800px;
}

.row {
  clear: both;
}

.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.flex-center {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.flex-column {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.flex-row {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.full-height {
  height: 100%;
}

.hide {
  display: none !important;
}

.hide-on-mobile {
  display: none;
}

.bg-light {
  background: #F5F5F5;
}

.bg-dark {
  background: #353535;
  color: #FFF;
}

.bg-darkest {
  background: #222;
  color: #FFF;
}

.bg-white {
  background: #FFF;
}

.clear {
  clear: both;
}

.pull-left {
  float: left !important;
}

.pull-right {
  float: right !important;
}

.pull-center {
  margin-left: auto;
  margin-right: auto;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.alignleft,
img.alignleft {
  margin-right: 1.5em;
  display: inline;
  float: left;
}

.alignright,
img.alignright {
  margin-left: 1.5em;
  display: inline;
  float: right;
}

.aligncenter,
img.aligncenter {
  margin-right: auto;
  margin-left: auto;
  display: block;
  clear: both;
}

.pad {
  padding: 5.6vw 5.6vw 5.6vw 5.6vw;
}

.pad-half {
  padding: 2.8vw;
}

.padded {
  padding: 10vw;
}

.no-margin {
  margin: 0 !important;
}

body > .alert {
  position: fixed;
  width: 100%;
}

.alert {
  background: #ede3a9;
  padding: 2.8vw;
  text-align: center;
  margin-bottom: 20px;
  position: relative;
  transition: -webkit-transform 0.4s ease-out;
  transition: transform 0.4s ease-out;
  transition: transform 0.4s ease-out, -webkit-transform 0.4s ease-out;
  -webkit-backface-visibility: visible !important;
          backface-visibility: visible !important;
  z-index: 11;
}

.alert.on {
  -webkit-transform-origin: top center;
          transform-origin: top center;
  -webkit-backface-visibility: visible !important;
          backface-visibility: visible !important;
  -webkit-animation-name: flipInX;
          animation-name: flipInX;
  -webkit-animation-duration: 0.6s;
          animation-duration: 0.6s;
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  opacity: 1;
  display: block;
}

.alert ul {
  margin: 0;
}

.alert.message {
  color: #222;
}

.alert.error,
.alert.alert-danger {
  background: #e65f5f;
  color: #FFF;
}

.alert.success,
.alert.alert-success {
  background: #8cc048;
  color: #FFF;
}

.error {
  color: #e65f5f;
}

html {
  font-size: 62%;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  font-size: 14px;
  font-size: 1.4rem;
  line-height: 19.95px;
  line-height: 1.995rem;
  color: #222;
  font-weight: 300;
  text-rendering: optimizeLegibility;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

p {
  margin: 0 0 15px;
}

p.small {
  margin: 0 0 5px;
}

.bold-text {
  font-family: "Gilroy ExtraBold", sans-serif;
}

code {
  background: #F5F5F5;
  border: 1px solid #CCC;
  border-radius: 4px;
  padding: 2px 6px;
  margin: -2px 0;
  font-size: 0.9em;
}

.huge {
  font-size: 90px;
  font-size: 9rem;
  font-size: 5vw;
  font-family: "Gilroy ExtraBold", sans-serif;
  line-height: 1;
}

small,
.small {
  font-size: 10px;
  font-size: 1rem;
}

/*********************
LINK STYLES
*********************/

a {
  color: #51FFB7;
  text-decoration: none;
  transition: all 0.2s ease-out;
  /* on hover */
  /* on click */
  /* mobile tap color */
}

a:hover {
  color: #75ffc6;
}

a:link {
  /*
    this highlights links on iPhones/iPads.
    so it basically works like the :hover selector
    for mobile devices.
    */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0.3);
}

.description a {
  text-decoration: underline;
}

/******************************************************************
H1, H2, H3, H4, H5 STYLES
******************************************************************/

.page-title {
  font-size: 5vw;
  line-height: 0.9;
  margin: 0;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5 {
  font-family: "Gilroy ExtraBold", sans-serif;
  font-weight: 400;
  text-transform: uppercase;
  /*
  if you're going to use webfonts, be sure to check your weights
  http://css-tricks.com/watch-your-font-weight/
  */
}

h1 a,
.h1 a,
h2 a,
.h2 a,
h3 a,
.h3 a,
h4 a,
.h4 a,
h5 a,
.h5 a {
  color: #222;
}

h1 a:hover,
.h1 a:hover,
h2 a:hover,
.h2 a:hover,
h3 a:hover,
.h3 a:hover,
h4 a:hover,
.h4 a:hover,
h5 a:hover,
.h5 a:hover {
  color: #353535;
}

h1 .btn,
.h1 .btn,
h2 .btn,
.h2 .btn,
h3 .btn,
.h3 .btn,
h4 .btn,
.h4 .btn,
h5 .btn,
.h5 .btn {
  vertical-align: bottom;
  margin: 0 10px 0;
}

h1,
.h1 {
  font-size: 24px;
  font-size: 2.4rem;
  line-height: 34.58px;
  line-height: 3.458rem;
  margin: 0 0 30px;
}

h2,
.h2 {
  font-size: 20px;
  font-size: 2rem;
  line-height: 39.9px;
  line-height: 3.99rem;
  font-family: "DoubleQuick", sans-serif;
  margin: 0 0 1rem;
}

h3,
.h3 {
  font-size: 16px;
  font-size: 1.6rem;
  margin: 0 0 15px;
}

h4,
.h4 {
  font-size: 12px;
  font-size: 1.2rem;
  font-weight: 700;
}

h5,
.h5 {
  line-height: 26.6px;
  line-height: 2.66rem;
  text-transform: uppercase;
  letter-spacing: 2px;
}

blockquote {
  font-style: italic;
  font-size: 20px;
  font-size: 2rem;
}

textarea {
  min-height: 200px;
}

input[type="text"],
input[type="email"],
input[type="password"],
input[type="date"],
input[type="tel"],
input[type="url"],
input[type="number"],
textarea {
  background: #F5F5F5;
  border: none;
  border-width: 0 0 2px 0;
  -webkit-appearance: none;
  border-radius: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  font-weight: 400;
  font-size: 16px;
  font-size: 1.6rem;
  padding: 14px 10px;
  margin-bottom: 10px;
  color: #222;
  min-width: 44px;
}

input[type="text"]:not([class*="col"]),
input[type="text"]:not([class^="col"]),
input[type="email"]:not([class*="col"]),
input[type="email"]:not([class^="col"]),
input[type="password"]:not([class*="col"]),
input[type="password"]:not([class^="col"]),
input[type="date"]:not([class*="col"]),
input[type="date"]:not([class^="col"]),
input[type="tel"]:not([class*="col"]),
input[type="tel"]:not([class^="col"]),
input[type="url"]:not([class*="col"]),
input[type="url"]:not([class^="col"]),
input[type="number"]:not([class*="col"]),
input[type="number"]:not([class^="col"]),
textarea:not([class*="col"]),
textarea:not([class^="col"]) {
  width: 100%;
}

input[type="text"]::-webkit-input-placeholder,
input[type="email"]::-webkit-input-placeholder,
input[type="password"]::-webkit-input-placeholder,
input[type="date"]::-webkit-input-placeholder,
input[type="tel"]::-webkit-input-placeholder,
input[type="url"]::-webkit-input-placeholder,
input[type="number"]::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #222;
  font-weight: 400;
}

input[type="text"]::-moz-placeholder,
input[type="email"]::-moz-placeholder,
input[type="password"]::-moz-placeholder,
input[type="date"]::-moz-placeholder,
input[type="tel"]::-moz-placeholder,
input[type="url"]::-moz-placeholder,
input[type="number"]::-moz-placeholder,
textarea::-moz-placeholder {
  color: #222;
  font-weight: 400;
}

input[type="text"]:-ms-input-placeholder,
input[type="email"]:-ms-input-placeholder,
input[type="password"]:-ms-input-placeholder,
input[type="date"]:-ms-input-placeholder,
input[type="tel"]:-ms-input-placeholder,
input[type="url"]:-ms-input-placeholder,
input[type="number"]:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #222;
  font-weight: 400;
}

input[type="text"]:disabled,
input[type="text"][readonly],
input[type="email"]:disabled,
input[type="email"][readonly],
input[type="password"]:disabled,
input[type="password"][readonly],
input[type="date"]:disabled,
input[type="date"][readonly],
input[type="tel"]:disabled,
input[type="tel"][readonly],
input[type="url"]:disabled,
input[type="url"][readonly],
input[type="number"]:disabled,
input[type="number"][readonly],
textarea:disabled,
textarea[readonly] {
  background: #F5F5F5;
  cursor: not-allowed;
}

input[type="number"] {
  width: auto;
}

input[type="date"]::-webkit-calendar-picker-indicator {
  display: none;
}

input.datepicker {
  width: 100%;
}

.checkbox-group label {
  text-align: left;
}

.checkbox {
  width: 50%;
  display: block;
  float: left;
  padding: 5px 0;
}

.checkbox .field_with_errors {
  display: inline;
}

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 5px;
}

input[type="checkbox"] + label,
input[type="radio"] + label {
  clear: none;
  display: inline;
  margin-right: 10px;
  padding-right: 0;
}

form.inline label,
form.inline input[type="text"],
form.inline input[type="email"],
form.inline input[type="password"],
form.inline input[type="date"],
form.inline input[type="tel"],
form.inline input[type="url"],
form.inline input[type="number"] {
  display: inline-block;
  margin-bottom: 0;
  padding: 14px;
}

@media only screen and (max-width: 767px) {
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="date"],
  input[type="tel"],
  input[type="url"],
  input[type="number"],
  textarea {
    width: 100%;
  }
}

.inline-buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.icon-button {
  font-size: 50px;
  font-size: 5rem;
  text-align: center;
}

.icon-button i {
  margin: 0 !important;
}

@media only screen and (min-width: 48em) {
  .inline-buttons > * {
    margin-bottom: 10px;
  }

  .inline-buttons > *:not(:last-child) {
    margin-right: 10px;
  }
}

@media only screen and (max-width: 48em) {
  .inline-buttons > * {
    margin-bottom: 4px;
    width: 49%;
  }

  .inline-buttons > *:nth-child(odd) {
    margin-right: 1%;
  }
}

[role="button"],
input[type="submit"],
input[type="button"],
button {
  background: #51FFB7;
  color: #FFF;
  display: inline-block;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  margin-bottom: 5.6vw;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  text-shadow: none;
  padding: 10px 20px;
  vertical-align: middle;
  -ms-touch-action: manipulation;
      touch-action: manipulation;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap;
  transition: all 0.1s cubic-bezier(0, 0.85, 0.33, 1.02);
  z-index: 0;
}

[role="button"]:after,
input[type="submit"]:after,
input[type="button"]:after,
button:after {
  display: block;
  content: "";
  height: 100%;
  width: 0%;
  position: absolute;
  left: 0;
  top: 0;
  transition: 0.6s cubic-bezier(0, 0.85, 0.33, 1.02);
  z-index: -1;
}

[role="button"]:not(.btn-tiny):before,
input[type="submit"]:not(.btn-tiny):before,
input[type="button"]:not(.btn-tiny):before,
button:not(.btn-tiny):before {
  margin-right: 10px;
}

[role="button"]:hover,
[role="button"]:focus,
[role="button"].focus,
input[type="submit"]:hover,
input[type="submit"]:focus,
input[type="submit"].focus,
input[type="button"]:hover,
input[type="button"]:focus,
input[type="button"].focus,
button:hover,
button:focus,
button.focus {
  /* outline: thin dotted;
    // WebKit
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px; */
  text-decoration: none;
  color: #FFF;
}

[role="button"]:hover:after,
[role="button"]:focus:after,
[role="button"].focus:after,
input[type="submit"]:hover:after,
input[type="submit"]:focus:after,
input[type="submit"].focus:after,
input[type="button"]:hover:after,
input[type="button"]:focus:after,
input[type="button"].focus:after,
button:hover:after,
button:focus:after,
button.focus:after {
  width: 100%;
}

[role="button"]:active,
input[type="submit"]:active,
input[type="button"]:active,
button:active {
  outline: 0;
  background-image: none;
  box-shadow: none;
}

[role="button"].disabled,
[role="button"][disabled],
input[type="submit"].disabled,
input[type="submit"][disabled],
input[type="button"].disabled,
input[type="button"][disabled],
button.disabled,
button[disabled] {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
  box-shadow: none;
}

i[role="button"] {
  cursor: default;
}

i[role="button"].btn-tiny:hover {
  -webkit-transform: scale(1);
          transform: scale(1);
}

form.loading .btn-round {
  -webkit-animation: 1s linear 0s normal none infinite running rotate;
          animation: 1s linear 0s normal none infinite running rotate;
}

form.loading .btn-round:before {
  content: "\e8da";
  font-size: 30px;
  font-size: 3rem;
}

form.success [role="button"] {
  background: #8cc048;
}

form.success [role="button"]:before {
  content: "\e934";
  font-size: 26px;
  font-size: 2.6rem;
  -webkit-animation: slide-from-bottom 0.2s ease-out;
          animation: slide-from-bottom 0.2s ease-out;
}

form.error [role="button"] {
  background: #e65f5f;
}

form.error [role="button"]:before {
  content: "\e955";
  font-size: 26px;
  font-size: 2.6rem;
  -webkit-animation: slide-from-top 0.4s ease-out;
          animation: slide-from-top 0.4s ease-out;
}

@media only screen and (max-width: 48em) {
  [role="button"],
  input[type="submit"],
  input[type="button"],
  button {
    width: 100%;
  }
}

input[type="submit"],
input[type="button"],
button {
  float: right;
}

input[type="submit"].btn-cancel,
input[type="button"].btn-cancel,
button.btn-cancel {
  margin-right: 40px;
}

/*********************
BUTTONS
*********************/

a[role="button"].btn-round {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  border-radius: 100%;
}

[role="button"].btn-primary {
  background: #51FFB7;
}

[role="button"].btn-primary:after {
  background: #84ffcc;
}

[role="button"].btn-secondary {
  background: #00ea89;
}

[role="button"].btn-secondary:after {
  background: #00f48f;
}

[role="button"].btn-tertiary {
  background: #E8E8E8;
  border: 1px solid #CCC;
  color: #353535;
}

[role="button"].btn-tertiary:after {
  background: #F5F5F5;
}

[role="button"].btn-dark {
  background: #222;
}

[role="button"].btn-dark:after {
  background: #353535;
}

[role="button"].btn-warning {
  background: #07778E;
  border: 1px solid #06677b;
}

[role="button"].btn-approve {
  background: #8cc048;
}

[role="button"].btn-clear {
  background: transparent;
  color: #FFF;
  border: 1px solid #FFF;
}

[role="button"].btn-clear:after {
  background: rgba(255, 255, 255, 0.2);
}

[role="button"].btn-lg {
  padding: 10px 40px;
  margin-bottom: 5.6vw;
  margin-right: 5.6vw;
  font-size: 20px;
  font-size: 2rem;
  transition: all 0.2s cubic-bezier(0, 0.85, 0.33, 1.02);
}

[role="button"].btn-lg.btn-clear {
  padding: 7px 40px;
}

[role="button"].btn-lg.btn-clear:hover,
[role="button"].btn-lg.btn-clear:focus,
[role="button"].btn-lg.btn-clear.focus {
  color: #FFF;
}

[role="button"].btn-sm {
  padding: 4px 10px;
  font-size: 10px;
  font-size: 1rem;
  border-radius: 30px;
}

[role="button"].btn-xs {
  border-radius: 100%;
  text-align: center;
  line-height: 1;
  height: 30px;
  width: 30px;
  padding: 7px;
  margin-right: 4px;
  font-size: 14px;
  font-size: 1.4rem;
}

[role="button"].btn-xs:hover {
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
}

[role="button"].active {
  background: #51FFB7;
  border-color: #84ffcc;
}

[role="button"].active:after {
  background: #84ffcc;
}

[role="button"].btn-block {
  width: 100%;
}

[role="button"] i {
  margin-right: 4px;
}

[role="button"] i.icon-loading {
  display: none;
}

[role="button"].btn-small i {
  margin-top: 2px;
}

[role="button"].inner-addon {
  padding: 0;
}

[role="button"].inner-addon > div {
  float: left;
}

[role="button"].inner-addon .addon {
  background: #CCC;
  padding: 13px 5px 13px 5px;
  font-size: 11px;
  font-size: 1.1rem;
}

/*********************
FILE INPUT
*********************/

input[type="file"] {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1;
}

input[type="file"] + label {
  font-size: 12px;
  font-size: 1.2rem;
  padding: 10px 20px;
  display: inline-block;
  cursor: pointer;
}

input[type="file"] + label:before {
  font-size: 18px;
  font-size: 1.8rem;
  vertical-align: middle;
}

input[type="file"]:focus + label,
input[type="file"] + label:hover {
  background-color: #75ffc6;
}

input[type="file"]:focus + label {
  outline: 1px dotted #000;
  outline: -webkit-focus-ring-color auto 5px;
}

input[type="file"]:focus + label * {
  pointer-events: none;
}

.checkbox,
.checkbox-small {
  margin-top: 5.6vw;
  margin-bottom: 5.6vw;
  position: relative;
}

.checkbox label,
.checkbox-small label {
  position: relative;
  cursor: pointer;
  display: block;
}

.checkbox input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.checkbox input[type="checkbox"] + div {
  cursor: pointer;
  display: inline-block;
  float: left;
  margin-right: 5.6vw;
  vertical-align: middle;
  width: 54px;
  height: 30px;
  border: 1px solid #CCC;
  border-radius: 999px;
  background: #E8E8E8;
  overflow: hidden;
  transition: all 0.2s cubic-bezier(0, 0.85, 0.33, 1.02);
}

.checkbox input[type="checkbox"] + div:before {
  content: '';
  float: left;
  width: 28px;
  height: 28px;
  margin: 0;
  border-radius: inherit;
  background: #FFF;
}

.checkbox input[type="checkbox"]:checked + div {
  background-color: #51FFB7;
  padding-left: 25px;
}

.checkbox-small input[type="checkbox"] + div {
  width: 34px;
  height: 20px;
}

.checkbox-small input[type="checkbox"] + div:before {
  width: 19px;
  height: 19px;
}

.checkbox-small input[type="checkbox"]:checked + div {
  padding-left: 14px;
}

/*********************
SELECT DROPDOWNS
*********************/

ul.select-dropdown {
  border-top: 1px solid #CCC;
  width: 100%;
  height: auto;
  min-height: 43px;
  max-height: 300px;
  padding: 0;
  position: relative;
  overflow: auto;
  list-style: none;
  z-index: 1;
}

ul.select-dropdown:after {
  content: ' ';
  height: 0;
  position: absolute;
  top: 18px;
  right: 10px;
  width: 0;
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-top: 8px solid #FFF;
  z-index: 19;
}

ul.select-dropdown li {
  background: #ebebeb;
  border: 1px solid #CCC;
  border-width: 0 1px 1px;
  cursor: pointer;
  display: block;
  position: absolute;
  padding: 9px 6px;
  transition: background 0.2s ease-out;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

ul.select-dropdown li:first-child {
  z-index: 2;
}

ul.select-dropdown li.selected {
  z-index: 18;
}

ul.select-dropdown li:hover {
  background: #E8E8E8;
}

ul.select-dropdown.open {
  z-index: 2;
}

ul.select-dropdown.open li {
  position: relative;
}

.radio-button {
  position: relative;
}

.radio-button input[type=radio],
.radio-button label,
.radio-button label:before {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.radio-button label {
  display: inline-block;
  cursor: pointer;
  position: relative;
  margin: 0;
  text-align: center;
  font-family: "Gilroy ExtraBold", sans-serif;
  text-transform: uppercase;
  font-weight: 700;
  padding-right: auto;
}

.radio-button label:before {
  z-index: -1;
}

.radio-button input[type=radio] {
  visibility: hidden;
}

.radio-button input[type=radio]:checked + label {
  background-color: #51FFB7;
}

.radio-button input[type=radio]:checked + label:after {
  background-color: #75ffc6;
}

input[type="file"] {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1;
  -webkit-appearance: none;
}

input[type="file"] + label {
  background-color: #51FFB7;
  color: #FFF;
  border-radius: 4px;
  font: 16px "Gilroy ExtraBold", sans-serif;
  text-transform: uppercase;
  padding: 10px 20px;
  display: inline-block;
  cursor: pointer;
}

input[type="file"] + label:before {
  font-size: 1em;
  vertical-align: middle;
}

input[type="file"]:focus + label,
input[type="file"] + label:hover {
  background-color: #75ffc6;
  transition: -webkit-transform 0.1s ease-in;
  transition: transform 0.1s ease-in;
  transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in;
  -webkit-transform: scale(1.05);
          transform: scale(1.05);
}

input[type="file"]:focus + label {
  outline: 1px dotted #000;
  outline: -webkit-focus-ring-color auto 5px;
}

input[type="file"]:focus + label * {
  pointer-events: none;
}

/*********************
FORM STYLES
*********************/

fieldset {
  border: none;
  border-bottom: 1px solid #CCC;
  clear: both;
  margin: 11.2vw 0 10px;
  padding: 0;
  min-height: 300px;
}

fieldset.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.form-group,
.form-row {
  clear: both;
  transition: background 0.2s ease;
  margin: 20px 0;
}

.form-group:before,
.form-group:after,
.form-row:before,
.form-row:after {
  content: " ";
  display: table;
}

.form-group:after,
.form-row:after {
  clear: both;
}

.form-group.valid .form-num:before,
.form-row.valid .form-num:before {
  background: #51FFB7;
}

.form-group.error .form-num:before,
.form-row.error .form-num:before {
  background: #e65f5f;
}

.description {
  font-weight: 400;
  font-style: italic;
  padding: 5px 10px 5px 0;
  font-size: 10px;
  font-size: 1rem;
  clear: both;
}

label {
  display: block;
  font-size: 16px;
  font-size: 1.6rem;
  font-family: "Gilroy ExtraBold", sans-serif;
  padding-right: 40px;
  margin-bottom: 6px;
}

label.display-inline {
  clear: none;
  display: inline-block;
  width: auto;
}

/*****************
ERRORS
*****************/

.form-group .alert,
.parsley-errors-list {
  margin: 0;
  display: none;
}

.form-group .alert.filled,
.parsley-errors-list.filled {
  background: #e65f5f;
  display: block;
  list-style: none;
  color: #FFF;
  padding: 0;
  margin-top: 0;
  margin-bottom: 10px;
  clear: left;
  -webkit-transform-origin: top center;
          transform-origin: top center;
  -webkit-backface-visibility: visible !important;
          backface-visibility: visible !important;
  -webkit-animation-name: flipInX;
          animation-name: flipInX;
  -webkit-animation-duration: 0.6s;
          animation-duration: 0.6s;
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
}

.form-group .alert.filled li,
.parsley-errors-list.filled li {
  font-size: 12px;
  font-size: 1.2rem;
  padding: 4px;
  text-align: left;
}

.form-group .alert.filled li:first-child,
.parsley-errors-list.filled li:first-child {
  margin-top: -10px;
}

.datepicker + .parsley-errors-list.filled {
  margin-top: 20px;
  margin-bottom: 0px;
  padding-left: 42px;
}

html,
body {
  height: 100%;
}

body {
  background: #FFF;
  counter-reset: track-counter;
}

div#app {
  min-height: 100%;
  min-height: 100vh;
  margin: 0 auto;
  position: relative;
  transition: background 0.8s cubic-bezier(0, 0.85, 0.33, 1.02);
}

div#app[data-page="home"] {
  transition-delay: 0.4s;
}

div#app[data-page="project"] {
  background: #222;
  color: #FFF;
  transition-delay: 1.2s;
}

div#app.isAnimating .project-content > div {
  opacity: 0;
  -webkit-transform: scale(0.8);
          transform: scale(0.8);
}

header.header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  text-align: center;
  padding: 10px 5.6vw;
  transition: -webkit-transform 0.4s cubic-bezier(0.19, 1, 0.22, 1);
  transition: transform 0.4s cubic-bezier(0.19, 1, 0.22, 1);
  transition: transform 0.4s cubic-bezier(0.19, 1, 0.22, 1), -webkit-transform 0.4s cubic-bezier(0.19, 1, 0.22, 1);
  width: 100%;
  position: fixed;
  top: 0;
  z-index: 10;
}

header.header #home {
  color: #111;
}

header.header .tagline {
  float: right;
}

header.header .tagline h2 {
  font-family: "Gilroy ExtraBold", sans-serif;
  font-size: 0.8rem;
  margin: 0;
}

#logo {
  background: #51FFB7;
  background-size: contain;
  color: #111;
  margin-bottom: -5px;
  max-height: 100%;
  display: inline-block;
  padding: 2.8vw 15px;
  position: absolute;
  left: 5.6vw;
  top: 100%;
  transition: -webkit-transform 0.4s cubic-bezier(1, 0, 0, 1);
  transition: transform 0.4s cubic-bezier(1, 0, 0, 1);
  transition: transform 0.4s cubic-bezier(1, 0, 0, 1), -webkit-transform 0.4s cubic-bezier(1, 0, 0, 1);
}

#logo h1 {
  font-size: 1rem;
  line-height: 0;
  margin: 0;
}

#logo:after {
  display: block;
  content: '';
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 20px 47px 0px 47px;
  border-color: #51FFB7 transparent transparent transparent;
  position: absolute;
  top: 100%;
  left: 0;
}

@media only screen and (min-width: 48em) {
  header.header .tagline h2 {
    font-size: 1.2rem;
  }

  #logo {
    left: 120px;
  }

  #logo:after {
    border-width: 28px 60px 0px 60px;
  }

  #logo h1 {
    font-size: 1.4rem;
  }
}

#back {
  float: left;
  transition: all 0.2s cubic-bezier(0.19, 1, 0.22, 1) 1.4s;
  padding-right: 20px;
}

#back:hover {
  -webkit-transform: translateX(-10px);
          transform: translateX(-10px);
}

[data-page="home"] #back {
  -webkit-transform: translateX(-60px);
          transform: translateX(-60px);
  opacity: 0;
}

[data-page="project"] #back svg {
  -webkit-filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.3));
          filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.3));
}

[data-page="project"] #back svg path {
  fill: #FFF;
}

a#menu-toggle {
  display: block;
  height: auto;
  padding: 20px 14px;
  position: fixed;
  transition: -webkit-transform 0.4s ease-in 2s;
  transition: transform 0.4s ease-in 2s;
  transition: transform 0.4s ease-in 2s, -webkit-transform 0.4s ease-in 2s;
  right: 0;
  top: 100%;
  z-index: 999;
}

a#menu-toggle span,
a#menu-toggle span:before,
a#menu-toggle span:after {
  background: #222;
  border-radius: 4px;
  height: 4px;
  width: 20px;
  display: block;
  transition: width 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}

a#menu-toggle span:before {
  width: 10px;
}

a#menu-toggle span:after {
  width: 15px;
}

a#menu-toggle span {
  position: relative;
}

a#menu-toggle span:before,
a#menu-toggle span:after {
  position: absolute;
  right: 0;
  content: '';
}

a#menu-toggle span:before {
  top: -7px;
}

a#menu-toggle span:after {
  bottom: -7px;
}

a#menu-toggle:hover span,
a#menu-toggle:hover span:before,
a#menu-toggle:hover span:after {
  width: 20px;
}

[data-page="project"] a#menu-toggle span,
[data-page="project"] a#menu-toggle span:before,
[data-page="project"] a#menu-toggle span:after {
  background: #FFF;
}

.showNav nav#app-nav {
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.showNav a#menu-toggle span {
  height: 0;
}

.showNav a#menu-toggle span:before {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  top: -2px;
  width: 20px;
}

.showNav a#menu-toggle span:after {
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
  bottom: -2px;
  width: 20px;
}

.showNav #logo {
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
}

nav#app-nav {
  background: #51FFB7;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  transition: -webkit-transform 0.4s cubic-bezier(1, 0, 0, 1);
  transition: transform 0.4s cubic-bezier(1, 0, 0, 1);
  transition: transform 0.4s cubic-bezier(1, 0, 0, 1), -webkit-transform 0.4s cubic-bezier(1, 0, 0, 1);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 11;
}

nav#app-nav ul {
  line-height: 1;
  font-size: 5vw;
  font-family: "DoubleQuick", sans-serif;
  text-transform: uppercase;
  text-align: center;
}

nav#app-nav ul li {
  padding: 0;
  margin: 5.6vw 0;
}

nav#app-nav ul a {
  color: #222;
  text-align: center;
}

footer#app-footer {
  clear: both;
  text-align: center;
  position: absolute;
  bottom: 0;
  padding: 0 5.6vw;
  width: 100%;
}

ul#logos {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin: 0;
  overflow: hidden;
}

ul#logos li {
  display: inline-block;
  opacity: 0.6;
  -webkit-transform: translateY(100%);
          transform: translateY(100%);
  transition: all 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}

ul#logos li:nth-child(1) {
  transition-delay: 0.1s;
}

ul#logos li:nth-child(2) {
  transition-delay: 0.2s;
}

ul#logos li:nth-child(3) {
  transition-delay: 0.3s;
}

ul#logos li:nth-child(4) {
  transition-delay: 0.4s;
}

ul#logos li:nth-child(5) {
  transition-delay: 0.5s;
}

ul#logos li:nth-child(6) {
  transition-delay: 0.6s;
}

.isReady ul#logos li {
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

[data-page="project"] footer#app-footer {
  z-index: -1;
}

[data-page="project"] ul#logos {
  position: relative;
  z-index: -1;
}

[data-page="project"] ul#logos li {
  -webkit-transform: translateY(100%);
          transform: translateY(100%);
  opacity: 0;
}

.mask-loading {
  width: 100%;
}

.spinner {
  width: 50px;
  height: 50px;
  position: relative;
  margin: 0 auto;
}

.double-bounce1,
.double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #51FFB7;
  opacity: 0.6;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-animation: sk-bounce 2.0s infinite ease-in-out;
          animation: sk-bounce 2.0s infinite ease-in-out;
}

.double-bounce2 {
  -webkit-animation-delay: -1.0s;
          animation-delay: -1.0s;
}

@-webkit-keyframes sk-bounce {
  0%, 100% {
    -webkit-transform: scale(0);
            transform: scale(0);
  }

  50% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

@keyframes sk-bounce {
  0%, 100% {
    -webkit-transform: scale(0);
            transform: scale(0);
  }

  50% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

@media only screen and (min-width: 48em) {
  /******************************************************************
Site Name:
Author:

Stylesheet: Grid Stylesheet

I've seperated the grid so you can swap it out easily. It's
called at the top the style.scss stylesheet.

There are a ton of grid solutions out there. You should definitely
experiment with your own. Here are some recommendations:

http://gridsetapp.com - Love this site. Responsive Grids made easy.
http://susy.oddbird.net/ - Grids using Compass. Very elegant.
http://gridpak.com/ - Create your own responsive grid.

The grid below is a combination of the 1140 grid and Twitter Boostrap. 
I liked 1140 but Boostrap's grid was way more detailed so I merged them 
together, let's see how this works out. If you want to use 1140, the original 
values are commented out on each line.

******************************************************************/

  /*************************
BIG MARGIN
**************************/

  /*
.col1    { width: 5.801104972%;  }   
.col2    { width: 14.364640883%; } 
.col3  { width: 22.928176794%; }  
.col4   { width: 31.491712705%; }
.col5   { width: 40.055248616%; }
.col6    { width: 48.618784527%; }   
.col7  { width: 57.182320438000005%; } 
.col8  { width: 65.74585634900001%; } 
.col9   { width: 74.30939226%; }  
.col10    { width: 82.87292817100001%; }
.col11 { width: 91.436464082%; }
.col12 { width: 99.999999993%; } 

// layout & column defaults
[class^="col"], [class*=" col"] {
  position: relative;
  float: left;
  margin-right: 2.762430939%;
}

.last {
  float: right;
  margin-right: 0;
}
*/

  /*************************
SMALL MARGIN
**************************/

  /* .col1    { width: 7.33333%;  }    
.col2    { width: 15.6666666667%; }   
.col3    { width: 24%; }  
.col4    { width: 32.333333%; }  
.col5    { width: 40.6666666667%; } 
.col6    { width: 49%; }  
.col7    { width: 57.33333337%; }
.col8    { width: 65.666666667%; } 
.col9    { width: 74%; } 
.col10   { width: 82.3333333%; }  
.col11   { width: 90.96666667%; }  
.col12   { width: 100%; } 

// layout & column defaults
[class^="col"], [class*=" col"] {
  position: relative;
  float: left;
  margin-right: 1%
}

.last {
  margin-right:0;
  &.col1    { width: 8.33333%;  }    
  &.col2    { width: 16.6666666667%; }   
  &.col3    { width: 25%; }  
  &.col4    { width: 33.333333%; }  
  &.col5    { width: 41.6666666667%; } 
  &.col6    { width: 50%; }  
  &.col7    { width: 58.33333337%; }
  &.col8    { width: 66.666666667%; } 
  &.col9    { width: 75%; } 
  &.col10   { width: 83.3333333%; }  
  &.col11   { width: 91.96666667%; }  
  &.col12   { width: 100%; } 
} */

  /*************************
NO MARGIN
**************************/

  .col1 {
    width: 8.33333%;
  }

  .col2 {
    width: 16.6666666667%;
  }

  .col3 {
    width: 25%;
  }

  .col4 {
    width: 33.333333%;
  }

  .col5 {
    width: 41.6666666667%;
  }

  .col6 {
    width: 50%;
  }

  .col7 {
    width: 58.33333337%;
  }

  .col8 {
    width: 66.666666667%;
  }

  .col9 {
    width: 75%;
  }

  .col10 {
    width: 83.3333333%;
  }

  .col11 {
    width: 91.96666667%;
  }

  .col12 {
    width: 100%;
  }

  [class^="col"],
  [class*=" col"] {
    position: relative;
    float: left;
  }

  .last {
    float: right;
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/